<<<<<<< HEAD
JAVASCRIPT
=======
Quiz Javascript
>>>>>>> 156dd9daaceffd24fa3cc9d070a5955a0e3c6b60

01. Какая связь между JavaScript и ECMAScript?

02. Какая разница между <div> и <span> ?

03. Зачем используется !DOCTYPE? Почему ? Какой эффект имеет в браузерах ?

04. Javascript - однопоточный или многопоточный ? Объяснить

05. Где возможно подключить Javascript на странице ?

06. Вы хотите проигрывать музыку на web странице, какие решения вы будете использовать ?

07. Необходимо передать на сервер набор параметров, не перезагружая при этом страницу в браузере. Перечислите все возможные для этого способы. Назовите самый кроссбраузерный.

08. Что такое bubbling и capturing при обработке событий ? Объясните, как с ними работать в IE и как – в Firefox

09. Что такое замыкание в JavaScript? Зачем используется ? Напишите пример, объясните.

10. Чем отличаются операторы сравнения "==" и "===" ?

11. Нужно нарисовать таблицу с большим количеством столбцов. Чтобы таблица уместилась в экран, заголовки столбцов решили выводить вертикально. Придумайте и реализуйте кроссбраузерное решение для вывода вертикальных заголовков. Браузеры: IE6+, FF3.0+, Opera 9.5+, Chrome 4.0+.

12. Есть сайт, состоящий из одной страницы, нескольких js-файлов, нескольких css-файлов и десятка иконок. Нужно сократить время загрузки до минимума. Какие действия нужно предпринять?

13. Какие типы данных есть в JavaScript ?

14. Что делает функция isNaN ?

15. Как в JavaScript переводить числа между различными системами счисления ?

16. Чему будет равно выражение "1"+2+4 ?

17. Чему будет равно выражение 2+5+"8" ?

18. Системы контроля версий? SVN? CVS? Git? Что есть branch/trunk/tags ?

19. Что здесь написано? Напишите HTML код к которому будет применен данный стиль

	#my p.sel:first-line, .main li li a:hover + span{
		color:#f00; /* Что это за цвет? */
	}

20. Создайте простую страницу со слайдшоу не используя JavaScript

21. Какая разница между этими двумя выражениями?

	var x = 3;
	x = 3;
	
22. Какое различие между двумя строчками?

	!!(obj1 && obj2);
	(obj1 && obj2);

23. Знание jQuery:
	1) В чем вообще смысл фреймворков? Зачем они нужны? 
	2) Выбрать все элементы с id = idname
	3) Выбрать все элементы div с id = idname 
	4) Выбрать все элементы с class = classname 
	5) Выбрать div`ы которые содержат класс firstclass и класс secondclass
	6) Выбрать все div’ы с атрибутом title = test 
	7) Выбрать видимый div с именем red, который содержит тег span
	8) Что выберет этот фильтр $(“a[rel~=’external’]”)?
	9) Объясните “chaining”.
	10) Что делает код .end()?
	11) Как и почему вы свяжете пространство имен с обработчиком события (event handler)?
	12) Какой эффект (или fx) будет от очереди?
	13) В чем разница между .get(), [], и .eq()?
	14) В чем разница между .bind(), .live(), и.delegate()?
	15) В чем разница между $ и $.fn? Что такое $.fn.
	16) Оптимизируйте этот селектор: $(".foo div#bar:eq(0)")
	17) Что делает и зачем используется $.extend ?

24. Расскажите в каких случаях используются call и apply методы и в чем их главное отличие ?

25. В чём различие свойств innerHTML и outerHTML ?

26. Как изменить стиль/класс у элемента на javascript ?

27. Что такое JSON ?

28. Объясните, как работает JSONP (и почему это на самом деле не AJAX)

29. Назовите разницу:
	
	function Person(){}
	var person = Person()
	var person = new Person()
	
30. Что вернет консоль ? Почему ?

	if (!("a" in window)) {
		var a = 1;
	}
	console.log(a);

32. Что вернет консоль ? Почему ?

	function d(x) {
		return x * 2;
	}
	var d;
	console.log(d);
	
33. Что вернет консоль ? Почему ?

	var x = 15, y = 10;
	console.log(x ++ - ++ y + x ++);

34. Что вернет консоль ? Почему ?

	console.log(typeof typeof(undefined));

35. Как создать новый объект в JavaScript? Какие способы знаете и различия между ними ?

36. Базовые принципы ООП в JavaScript

37. Паттерны, перечислите основные.

38. Какая разница между undefined и undeclared ?

39. Что является объектом ? Что такое null и undefined ?

40. Как вызвать конструктор ?

41. Что означает ключевое слово this? Что находится в this в следующем фрагменте кода:

	function test() {
		this;
	}
	test();
	
42. Способы переопределения this

43. Каким образом можно реализовать наследование в Javascript ?

44. Можете ли вы объяснить, как работает наследование в JavaScript ?

45. Что такое prototype в JavaScript ?

46. Чем отличается object и constructor в JavaScript?

47. Чем отличаетя constructor от prototype ?

48. Что такое в Javascript пространство имен (namespacing)? Как и где это используется ?

49. Как создать локальный и глобальный методы в конструкторе ?

50. Как наследовать однин объект другому ?

51. Сделайте так, чтобы это работало:

	[1,2,3,4,5].duplicator(); // Result [1,2,3,4,5,1,2,3,4,5]

52. Какое значение будет возвращено ?

	~~3.14

53. Какой результат покажут два алерта ?

	var foo = "Hello";
	(function() { 
		var bar = " World"; 
		alert(foo + bar); 
	})(); 
	alert(foo + bar);

54. Какой результат выполнения кода ? Как исправить чтобы работало корректно ? 

	var as = document.getElementsByTagName('a');
	for ( var i = as.length; i--; ) {
		as[i].onclick = function() {
			alert(i);
			return false;
		}
	}
	
55. Почему работает не корректно?

	function User(name) {
		this.name = name;
	};

	var j = User('Jack');
	alert(j.name)
	
56. Почему этот код не работает в IE ?

	people = {
		1:'Jack',
		2:'Chloe',
		3:'Bruce',
	}

	for ( var person in people ) {
		alert( person )
	}

57. Почему вернет undefined ?

	(function() {
		var jack = 'Jack';
	})();
	alert(typeof jack)
	
58. Что выведет консоль ? Почему ?

	Foo.method = function() {
		function test() {
			console.log(this);
		}
		test();
	}
	
59. Выполнится ли функция ? Почему ?

	var foo = function() {
		// some code
	} 
	test()
	
60. Сделайте синтаксис возможным: a = (5).plus(3).minus(6); //2

61. Найдите наибольшее число в массиве чисел без использования циклов. Используйте для этого Math.max

62. Необходимо вернуть значение из объекта, если есть полный путь ключей к нужному значению в виде строки (path).

	var path = "key2.key21.key211";
	var o = {
		key1: 'val1',
		key2: {
			key21: {
					key211: 'val211'
				}
			}
	};

63. Как создать объект без прототипа ?

64. Передача значений в функцию. Что вернут алерты ?

	var a = {key: “value”};
	var b = {key: “value”};

	function A(a){ a.key = “newValue”};
	function B(b){ b = {key: “newValue”}; };

	alert(a.key);
	alert(b.key);

65. Объясните, для чего предназначена и каким образом работает следующая функция:

	function bind(method, context) {
		  var args = Array.prototype.slice.call(arguments, 2);
		  return function() {
				var a = args.concat(
								   Array.prototype.slice.call(arguments, 0));
				return method.apply(context, a);
		  }
	}

66. Что вернёт данный код и почему?

	(function f() {
		function f() { return 1 }

		return f();

		function f() { return 2 }
	})();

67. Что произойдёт в результате выполнения данного кода и почему?

	var car = {
	   color: 'red',
	   getColor: function() {
		  alert(this.color);
	   }
	};
	 
	car.getColor();
	var getColor = car.getColor;
	getColor();

68. Что произойдёт в результате выполнения данного кода и почему?

	function Book() {
	   this.name = 'foo'
	}
	 
	Book.prototype = {
	   getName: function() {
		  return this.name;
	   }
	}
	 
	var book = new Book();
	 
	Book.prototype.getUpperName = function() {
	   return this.name.toUpperCase();
	}
	 
	book.getUpperName();

69. Сколько элементов будет в объектах elems1 и elems2 в результате выполнения этого кода и почему?

	<!doctype html>
	<html>
	<head>
		<meta charset="utf-8">
		<title>Test</title>
	</head>
	<body>
		<a href="#">Test link 1</a>,
		<a href="#">Test link 2</a>
	</body>
	</html>

	var elems1 = document.getElementsByTagName('a'),
		elems2 = document.querySelectorAll("a");

	document.body.appendChild(document.createElement("a"));

	console.log(elems1.length, elems2.length);

70. Напишите код функции (reversePrint), которая выведет значения переданного ей односвязного списка в обратном порядке (4,3,2,1). Для вывода значений используйте конструкцию console.log.

	function reversePrint (linkedList) {
		// ...
	}

	var someList = {
		value: 1,
		next: {
			value: 2,
			next: {
				value: 3,
				next: {
					value: 4,
					next: null
				}
			}
		}
	};
	reversePrint(someList);
	
71. Предложите общее решение, позволяющее вызывать любую функцию не чаще N раз в секунду, даже если её вызов происходит чаще.

72. Напишите функцию JavaScript, которая соединит все строки, котрые переданы в функцию.

73. Написать функцию add которая складывает a и b и вызывается так: add(a)(b)

74. Ваш скрипт подключается на страницу, к которой вы не имеете доступа. На странице определена глобальная пользовательская функция addEventListener, которая делает что угодно, но не позволяет добавлять обработчики событий на window, а вам необходимо отслеживать события именно на window (например, onresize). При этом синтаксис вида window.onresize напрямую использовать нельзя, т.к. это может нарушить работу пользовательских скриптов. Ваши действия?

75. Напишите функцию, которая из произвольного входящего массива выберет все комбинации чисел, сумма которых будет равняться 10.

76. Что такое AMD ?

77. Что такое CRUD ?